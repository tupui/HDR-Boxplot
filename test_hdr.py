from hdr import hdr_boxplot
import pytest
import numpy as np
import numpy.testing as npt

# Water surface temperature data from:
# https://www.math.univ-toulouse.fr/~ferraty/SOFTWARES/NPFDA/npfda-datasets.html
# http://www.cpc.ncep.noaa.gov/data/indices/
data = np.loadtxt('data/elnino.dat')
print('Data shape: ', data.shape)

# pvalues = [0.00246924,  0.01403278]
# pvalues = [0.00246924,  0.00841798,  0.01402694]
# pvalues = [0.002467970605621098, 0.005454768236791291,
#            0.008433754315081714, 0.014032301477128261]
# pvalues = [0.0024692413309709447, 0.005434295353764029,
#            0.01132934634381712, 0.01406489777403659]


def test_basic():
    output = hdr_boxplot(data, x_common=np.linspace(1, 12, 12),
                         # path='.',
                         xlabel='Month of the year (-)',
                         ylabel='Water surface temperature (Â°C)')
    median, outliers, extreme_quartile, mean_quartile, extra_quartiles = output
    assert extra_quartiles is None

    median_t = [22.375,  21.209,  20.286,  20.016,
               20.380,  21.139,  22.269,  24.074,
               25.630,  26.120,  25.159,  23.849]
    npt.assert_almost_equal(median, median_t, decimal=2)

    quartiles = [outliers, extreme_quartile, mean_quartile]
    quartiles_t = [[[23.740,  23.100,  22.223,  21.972,
                     22.595,  23.560,  25.020,  26.720,
                     28.196,  29.124,  29.070,  28.397],
                    [26.611,  25.935,  24.658,  24.082,
                     24.609,  25.513,  26.849,  27.883,
                     28.749,  29.222,  28.644,  27.979]], 
                   [[26.212,  24.933,  23.447,  22.734,
                     22.978,  23.661,  24.648,  25.686,
                     27.187,  28.062,  27.886,  26.992], 
                    [20.302,  19.313,  18.722,  18.718,
                     19.212,  20.063,  21.173,  22.965,
                     24.502,  24.740,  23.122,  21.533]],
                   [[23.947,  22.713,  21.550,  21.087,
                     21.371,  22.076,  23.129,  24.743,
                     26.404,  27.191,  26.798,  25.720],
                    [21.096,  19.967,  19.230,  19.084,
                     19.467,  20.236,  21.354,  23.314,
                     24.972,  25.324,  24.017,  22.537]]]
    npt.assert_almost_equal(quartiles, quartiles_t, decimal=2)


def test_alpha():
    output = hdr_boxplot(data, alpha=[0.7])
    extra_quartiles = output[-1]
    extra_quartiles_t = [[[24.877,  23.655,  22.394,  21.852,
                           22.141,  22.854,  23.888,  25.127,
                           26.713,  27.531,  27.194,  26.186],
                          [20.834,  19.741,  19.020,  18.915,
                           19.324,  20.110,  21.217,  23.132,
                           24.766,  25.101,  23.766,  22.244]]]
    npt.assert_almost_equal(extra_quartiles, extra_quartiles_t, decimal=2)


def test_multiple_alpha():
    output = hdr_boxplot(data, alpha=[0.8, 0.6])
    extra_quartiles = output[-1]
    extra_quartiles_t = [[25.370, 24.138, 22.785, 22.169,
                          22.417, 23.100, 24.131, 25.371,
                          26.919, 27.754, 27.442, 26.480],
                         [20.611, 19.570, 18.901, 18.836,
                          19.279, 20.091, 21.198, 23.061,
                          24.663, 24.974, 23.419, 21.879],
                         [24.567, 23.337, 22.092, 21.564,
                          21.834, 22.530, 23.564, 24.916,
                          26.547, 27.361, 26.996, 25.953],
                         [20.984, 19.876, 19.140, 18.994,
                          19.368, 20.129, 21.242, 23.228,
                          24.869, 25.218, 23.916, 22.418]]
    npt.assert_almost_equal(extra_quartiles, extra_quartiles_t, decimal=2)


def test_threshold():
    output = hdr_boxplot(data, alpha=[0.8], threshold=0.7)
    outliers = output[1]
    outliers_t = [[24.05333788,22.66252135,21.41679314,20.89366884,
                   21.08726783,21.72257406,22.63437547,23.97015618,
                   25.09100807,25.06999787,23.36954759,21.82840675],
                  [24.39246864,23.35744247,22.22102673,21.77344065,
                   22.15754124,22.94138989,24.09636689,25.49401304,
                   26.68198267,27.04035777,26.0440819,24.92247454],
                  [25.4709903,24.29161744,22.94797079,22.33724377,
                   22.61211542,23.3165498,24.33142698,25.42769116,
                   26.33636136,26.36658132,24.89558129,23.62542617],
                  [23.74054926,23.10099988,22.22389467,21.97236849,
                   22.59524353,23.56040498,25.02074386,26.72090266,
                   28.19673756,29.12422689,29.07060398,28.3970015 ],
                  [25.9284084,24.6332403,23.17796864,22.48079641,
                   22.67875454,23.32590367,24.24228832,25.18942373,
                   25.95856081,25.7839571,23.99551792,22.59893463],
                  [22.32860028,21.42940575,20.62849206,20.44870788,
                   20.96314511,21.83824101,23.16079935,25.08035965,
                   26.74857798,27.56603933,27.17953827,26.17903275],
                  [22.75429005,21.87084997,21.01977234,20.79859037,
                   21.31067672,22.18588341,23.50521496,25.33421562,
                   26.92028363,27.6957058,27.27654949,26.30193541],
                  [26.61169032,25.93561953,24.658079,24.08219679,
                   24.60919234,25.51334735,26.84969753,27.88331499,
                   28.74992859,29.22212964,28.64451454,27.97960507]]

    npt.assert_almost_equal(outliers, outliers_t, decimal=2)
